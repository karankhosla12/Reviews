<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Feedback Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f4f8;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-top: 10px;
        }

        input, select, textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }

        button:hover {
            background-color: #45a049;
        }

        .output-box {
            margin-top: 20px;
            padding: 10px;
            background-color: #e8f5e9;
            border: 1px solid #4CAF50;
            border-radius: 4px;
            word-wrap: break-word;
            max-height: 200px;
            overflow-y: auto;
            white-space: pre-wrap;
        }

        #copyButton, #linkedinButton {
            width: 100%;
            padding: 10px;
            background-color: #2196F3;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 10px;
            font-size: 16px;
        }

        #copyButton:hover, #linkedinButton:hover {
            background-color: #0b7dda;
        }

        .hidden {
            display: none;
        }

        .footer {
            margin-top: 20px;
            text-align: center;
            font-size: 14px;
            color: #555;
        }

        .footer a {
            color: #2196F3;
            text-decoration: none;
        }

        .footer a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Feedback Form</h1>

        <!-- Form to generate the UTM URL -->
        <div id="urlForm" class="hidden">
            <h2>Generate your URL</h2>
            <label for="yourName">Your Name:</label>
            <input type="text" id="yourName" name="yourName">

            <label for="yourRole">Your Role:</label>
            <input type="text" id="yourRole" name="yourRole">

            <label for="yourLinkedIn">Your LinkedIn Profile:</label>
            <input type="url" id="yourLinkedIn" name="yourLinkedIn">

            <label for="name">Name of the feedback giver :</label>
            <input type="text" id="name" name="name">

            <label for="team">Which team does the feedback giver belong to? :</label>
            <input type="text" id="team" name="team">

            <button id="generateURLButton">Generate URL</button>
            <div id="generatedURL" class="output-box hidden"></div>
        </div>

        <!-- Form to capture feedback -->
        <div id="feedbackFormContainer">
            <form id="feedbackForm">
                <div id="userInfo" class="hidden">
                    <label for="yourName">Your Name:</label>
                    <input type="text" id="yourNameField" name="yourName" disabled>

                    <label for="yourRole">Your Role:</label>
                    <input type="text" id="yourRoleField" name="yourRole" disabled>

                    <label for="yourLinkedIn">Your LinkedIn Profile:</label>
                    <input type="url" id="yourLinkedInField" name="yourLinkedIn" disabled>
                </div>

                <label for="name">Name of the person giving feedback :</label>
                <input type="text" id="nameField" name="name" disabled>

                <label for="team">Which team does the feedback giver belong to? :</label>
                <input type="text" id="teamField" name="team" disabled>

                <label for="rating">Please rate overall services from 3-5:</label>
                <select id="rating" name="rating" required>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5">5</option>
                </select>

                <label for="notes">Additional Notes:</label>
                <textarea id="notes" name="notes"></textarea>

                <button type="submit">Submit</button>
            </form>

            <div id="outputBox" class="output-box">Review is getting ready...</div>
            <button id="copyButton">Copy to Clipboard</button>
            <button id="linkedinButton">Write Recommendation on LinkedIn</button>
        </div>
    </div>

    <!-- Footer Section -->
    <div class="footer">
        Developed by <strong>Karan Khosla</strong>. Check out my 
        <a href="https://www.linkedin.com/in/karan-khosla12" target="_blank">LinkedIn profile</a>.
    </div>

    <script>
        function getQueryParams() {
            const params = {};
            const queryString = window.location.search;
            const urlParams = new URLSearchParams(queryString);
            urlParams.forEach((value, key) => {
                params[key] = value;
            });
            return params;
        }

        // Show or hide forms based on URL parameters
        window.onload = function() {
            const params = getQueryParams();

            if (params.utm_name && params.utm_team && params.utm_yourname && params.utm_yourrole && params.utm_linkedinprofile) {
                // Populate feedback form and disable fields
                document.getElementById('nameField').value = params.utm_name;
                document.getElementById('teamField').value = params.utm_team;
                document.getElementById('yourNameField').value = params.utm_yourname;
                document.getElementById('yourRoleField').value = params.utm_yourrole;
                document.getElementById('yourLinkedInField').value = params.utm_linkedinprofile;

                document.getElementById('nameField').disabled = true;
                document.getElementById('teamField').disabled = true;
                document.getElementById('yourNameField').disabled = true;
                document.getElementById('yourRoleField').disabled = true;
                document.getElementById('yourLinkedInField').disabled = true;

                // Hide URL form and show feedback form
                document.getElementById('urlForm').classList.add('hidden');
                document.getElementById('feedbackFormContainer').classList.remove('hidden');
            } else {
                // Hide feedback form and show URL generation form
                document.getElementById('feedbackFormContainer').classList.add('hidden');
                document.getElementById('urlForm').classList.remove('hidden');
            }
        };

        // Generate the URL with UTM parameters
        document.getElementById('generateURLButton').addEventListener('click', function() {
            const yourName = document.getElementById('yourName').value;
            const yourRole = document.getElementById('yourRole').value;
            const yourLinkedIn = document.getElementById('yourLinkedIn').value;
            const name = document.getElementById('name').value;
            const team = document.getElementById('team').value;

            const url = `https://feedback-d9j.pages.dev/?utm_yourname=${encodeURIComponent(yourName)}&utm_yourrole=${encodeURIComponent(yourRole)}&utm_linkedinprofile=${encodeURIComponent(yourLinkedIn)}&utm_name=${encodeURIComponent(name)}&utm_team=${encodeURIComponent(team)}`;

            document.getElementById('generatedURL').textContent = url;
            document.getElementById('generatedURL').classList.remove('hidden');
        });

        document.getElementById('feedbackForm').addEventListener('submit', async function(event) {
            event.preventDefault();

            const yourName = document.getElementById('yourNameField').value;
            const yourRole = document.getElementById('yourRoleField').value;
            const yourLinkedIn = document.getElementById('yourLinkedInField').value;
            const name = document.getElementById('nameField').value;
            const team = document.getElementById('teamField').value;
            const rating = document.getElementById('rating').value;
            const notes = document.getElementById('notes').value;

            // Construct the prompt dynamically
            const prompt = `Name: ${name}\nTeam: ${team}\nRating: ${rating}\nNotes: ${notes}\n\nUsing these details, write a review in 200 words for ${yourName}, who is a ${yourRole}.`;

            const outputBox = document.getElementById('outputBox');
            outputBox.textContent = "Review is getting ready..."; // Show the waiting message

            // Prepare the payload for the API call
            const payload = {
                prompt: prompt
            };

            try {
                const response = await fetch('https://chat-gpt-api.karankhosla99.workers.dev/', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(payload)
                });

                // Ensure the response is valid JSON
                const data = await response.json();
                console.log('API Response:', data); // Log the API response for debugging

                // Check if the correct response structure is returned
                if (data.response && data.response.response) {
                    outputBox.textContent = data.response.response; // Update the output box with the response
                } else {
                    outputBox.textContent = 'No response received from the API'; // Default message if no response
                }
            } catch (error) {
                console.error('Error:', error);
                outputBox.textContent = 'There was an error processing your request. Please try again later.';
            }
        });

        // Copy to clipboard
        document.getElementById('copyButton').addEventListener('click', function() {
            const outputText = document.getElementById('outputBox').textContent;
            navigator.clipboard.writeText(outputText).then(function() {
                alert('Feedback copied to clipboard');
            });
        });

        // LinkedIn Button
        document.getElementById('linkedinButton').addEventListener('click', function() {
            // Get the 'yourLinkedIn' parameter from the URL
            const params = getQueryParams();
            const yourLinkedIn = params.utm_linkedinprofile;

            // Build the LinkedIn recommendation URL
            const linkedinUrl = yourLinkedIn + "/edit/forms/recommendation/write/";

            // Open the LinkedIn recommendation page in a new tab
            window.open(linkedinUrl, '_blank');
        });
    </script>
</body>
</html>
